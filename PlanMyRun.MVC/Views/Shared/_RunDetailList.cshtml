@model PlanMyRun.Models.RunModels.RunDetail


<div class="card text-center">

    <div class="card-header forecast-body">@String.Format("{0:d}", Model.ScheduleDateTime)</div>
    <div class="card-body forecast-body">


        <ul>
            <li>@Html.DisplayFor(model => model.PlannedDistance) Mile Run</li>
            <li>Est. Time: @Html.DisplayFor(model => model.EstimatedTime)</li>
            @if (Model.LocationName != "")
            {
                <li> Location: @Html.DisplayFor(model => model.LocationName)</li>
            }
            else
            {
                <li> Location:N/A</li>
            }
            @if (Model.ActualDistance != null)
            {
                <li> @Html.DisplayNameFor(model => model.ActualDistance): @Html.DisplayFor(model => model.ActualDistance)</li>
            }
            @if (Model.ActualTime != null)
            {
                <li> @Html.DisplayNameFor(model => model.ActualTime): @Html.DisplayFor(model => model.ActualTime)</li>
            }

        </ul>

        <div class="row justify-content-around">
            <a href="@Url.Action("Edit","Run", new { id = Model.Id })" title="Edit"><img alt="Edit" src="@Url.Content("~/Content/assets/pencil-square.svg")" /></a>
            <a href="@Url.Action("Details","Run", new { id = Model.Id })" title="Details"><img alt="Details" src="@Url.Content("~/Content/assets/info-square.svg")" /></a>
            <a href="@Url.Action("Delete","Run", new { id = Model.Id })" title="Delete"><img alt="Delete" src="@Url.Content("~/Content/assets/trash.svg")" /></a>
        </div>
    </div>

</div>


