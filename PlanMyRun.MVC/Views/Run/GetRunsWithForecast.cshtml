@model IEnumerable<PlanMyRun.Models.RunModels.DailyRunForecast>

@{
    ViewBag.Title = "GetRunsWithForecast";
}

@*<%-- used for ajax in AddAntiForgeryToken() --%>*@
<form id="__AjaxAntiForgeryForm" action="#" method="post">@Html.AntiForgeryToken()</form>

<h2>GetRunsWithForecast</h2>

<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.Date)
        </th>
        <th></th>
    </tr>
</table>
<div class="container-fluid">
    <div class="row">


        @foreach (var item in Model)
        {
            <div class="col">
                <div class="padding">

                    @Html.Partial("_ForecastDayPartial", item.DaysForecast)
                </div>
                <div class="padding">

                    @if (item.DaysRun.Id != 0)
                    {
                        @Html.Partial("_RunDetailList", item.DaysRun)
                    }
                </div>
            </div>

        }
    </div>
    <div id="calendar"></div>

    <div id="myModal" class="modal fade" role="dialog">
        <div class="modal-dialog modal-dialog-scrollable">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                    <h4 class="modal-title"><span id="eventTitle"></span></h4>
                </div>
                <div class="modal-body">
                    <p id="pDetails"></p>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                </div>
            </div>
        </div>
    </div>


    @*MainFunctionality css
        DayGrid css
        Time grid css*@
    <link href="https://unpkg.com/@("@")fullcalendar/core@4.4.0/main.min.css" rel="stylesheet" />
    <link href="https://unpkg.com/@("@")fullcalendar/daygrid@4.4.0/main.min.css" rel="stylesheet" />
    <link href="https://unpkg.com/@("@")fullcalendar/timegrid@4.4.0/main.min.css" rel="stylesheet" />
    <link href='https://use.fontawesome.com/releases/v5.0.6/css/all.css' rel='stylesheet'>


    @section scripts{

        @*Moment js
            MainFunctionality js
            Interaction js
            daygrid js
            timegrid js
            bootstrap js
            moment js*@
        <script src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.18.1/moment.min.js"></script>
        <script src="https://unpkg.com/@("@")fullcalendar/core@4.4.0/main.min.js"></script>
        <script src="https://unpkg.com/@("@")fullcalendar/interaction@4.4.0/main.min.js"></script>
        <script src="https://unpkg.com/@("@")fullcalendar/daygrid@4.4.0/main.min.js"></script>
        <script src="https://unpkg.com/@("@")fullcalendar/timegrid@4.4.0/main.min.js"></script>
        <script src="https://unpkg.com/@("@")fullcalendar/bootstrap@4.4.0/main.min.js"></script>
        <script src="https://unpkg.com/@("@")fullcalendar/moment@4.4.0/main.min.js"></script>
        <script>
        $(document).ready(function () {
            var calendarEl = document.getElementById('calendar');
            var calendar = new FullCalendar.Calendar(calendarEl, {
                plugins: ['interaction', 'dayGrid', 'timeGrid','moment', 'bootstrap'],
                themeSystem: 'bootstrap',
                contentHeight: 400,
                eventSources: [
                                {
                                    events:function ( fetchInfo, successCallback, failureCallback) {
                                        $.ajax({
                                            type: "GET",
                                            url: "/Run/GetUnscheduledRuns/",
                                            success: function (data) {
                                                var runs = [];
                                                $.each(data, function (i, v) {
                                                    runs.push({
                                                        title: v.PlannedDistance + ' Mile Run',
                                                        id: v.Id,
                                                        description: v.Description,
                                                        start: moment(v.ScheduleDateTime).format(),
                                                        end: v.End != null ? moment(v.End).format() : null,
                                                        extendedProps: {
                                                            raceName: v.RacePlanName,
                                                            plannedDistance: v.PlannedDistance,
                                                            raceName: v.RacePlanName,
                                                            actualDistance: v.ActualDistance,
                                                            actualTime: v.ActualTime,
                                                            racePlanId: v.RacePlanId,
                                                            estimatedTime: v.EstimatedTime.TotalHours,
                                                            locationId: v.LocationId
                                                        }
                                                    });
                                                })

                                                successCallback(runs);
                                            },
                                            error: function (error) {
                                                alert('Failed to retrieve runs for this plan.');
                                             }
                                        })
                                    },
                                    color: '#2274A5',   // an option!
                                    textColor: 'black' // an option!
                                },
                                {
                                    events: function (fetchInfo, successCallback, failureCallback) {
                                        $.ajax({
                                            type: "GET",
                                            url: "/Forecast/GetForecastEvents",
                                            success: function (data) {
                                                var forecasts = [];
                                                $.each(data, function (i, v) {
                                                    forecasts.push({
                                                        title: v.Description,
                                                        eventId: v.Id,
                                                        description: v.Description,
                                                        start: moment(v.StartTime).format(),
                                                        end: v.EndTime != null ? moment(v.EndTime).format() : null,
                                                        editable:false
                                                        //rendering: 'background'
                                                    });
                                                })

                                                successCallback(forecasts);
                                            },
                                            error: function (error) {
                                                alert('Failed to retrieve forecast events.');
                                            }
                                        })
                                    },
                                    color: '#EA4E18',
                                    textColor: 'black'

                                }

                ],


                defaultView: 'timeGridWeek',
                header: {
                    left: 'prev, next today',
                    center: 'title',
                    right: 'dayGridMonth, timeGridWeek, timeGridDay'
                },
                 eventLimit: true,
                        eventColor: '#2274A5',
                eventClick: function (info) {
                            $('#myModal #eventTitle').text(info.event.title);
                            var $description = $('<div/>');
                    if (info.event.extendedProps.description) {
                        $description.append($('<p/>').html('<b>Description:</b>' + info.event.extendedProps.description));
                    }
                    else {
                        $description.append($('<p/>').html('<b>Description :N/A</b>'));
                    }
                            //$description.append($('<p/>').html('<b>Planned Distance:</b>' + info.event.extendedProps.plannedDistance));
                            $description.append($('<p/>').html('<b>Start:</b>' + moment(info.event.start).format("DD-MMM-YYYY h:mm a")));
                            if (info.event.end != null) {
                                $description.append($('<p/>').html('<b>End:</b>' + moment(info.event.end).format("DD-MMM-YYYY h:mm a")));
                            }
                    if (info.event.extendedProps.locationId != null) {
                        $description.append($('<p/>').html('<b>Location Id :</b>' + info.event.extendedProps.locationId));
                    }
                    else
                    {
                         $description.append($('<p/>').html('<b>Location Id : N/A</b>'));
                    }
                    $description.append($('<p/>').html('<b>Estimated Time in Hours:</b>' + info.event.extendedProps.estimatedTime));
                    if (info.event.extendedProps.actualDistance != null) {
                        $description.append($('<p/>').html('<b>Actual Distance :</b>' + info.event.extendedProps.actualDistance));
                    }
                    else
                    {
                         $description.append($('<p/>').html('<b>Actual Distance : 00.00</b>'));
                    }
                    if (info.event.extendedProps.actualTime != null) {
                        $description.append($('<p/>').html('<b>Actual Time :</b>' + info.event.extendedProps.actualTime));
                    }
                    else
                    {
                         $description.append($('<p/>').html('<b>Actual Time : 00:00:00' ));
                    }
                            $('#myModal #pDetails').empty().html($description);

                            $('#myModal').modal();
                        },
                                editable: true,
                eventDrop:function (info) {
                        var data = {

                            Id: info.event.id,
                            RacePlanId: info.event.extendedProps.racePlanId,
                            Description: info.event.extendedProps.Description,
                            PlannedDistance: info.event.extendedProps.plannedDistance,
                            EstimatedTime: info.event.extendedProps.estimatedTime,
                            ScheduleDateTime: moment(info.event.start).format('MM/DD/YYYY HH:mm'),
                            End: info.event.end != null ? moment(info.event.end).format('DD/MM/YYYY HH:mm A') : null,
                            LocationId: info.event.extendedProps.locationId,
                            ActualDistance: info.event.extendedProps.actualDistance,
                            ActualTime: info.event.extendedProps.acutalTime,

                        };
                        SaveEvent(data);
                },
                selectable: true,

                    select: function (start, end) {
                        selectedEvent = {
                            eventID: 0,
                            title: '',
                            description: '',
                            start: start,
                            end: end,
                            allDay: false,
                            color: ''
                        };
                        openAddEditForm();
                       // calendar.render();
                       // calendar.unselect();
                        //$('#calendar').fullCalendar('unselect');
                    },
            });
            calendar.render();

        });

                function SaveEvent(data) {

                AddAntiForgeryToken(data);
                if (data.Id == ""||data.Id=="1") {
                    $.ajax({
                        type: "POST",
                        url: '@Url.Action("Create", "Run")',
                        data: data,
                        success: function () {

                            //Refresh the calender
                            // $('#calender').fullCalendar().destroy();
                            $('#myModalSave').modal('hide');

                        },
                        error: function () {
                            alert('Failed');
                        }
                    })

                }
                else {
                $.ajax({
                    type: "POST",
                    url: '@Url.Action("Edit", "Run")',
                    data: data,
                    success: function () {

                            //Refresh the calender
                           // $('#calender').fullCalendar().destroy();
                            $('#myModalSave').modal('hide');

                    },
                    error: function () {
                        alert('Failed');
                    }
                })
                    }
            }

             function AddAntiForgeryToken(data) {
              data.__RequestVerificationToken = $('#__AjaxAntiForgeryForm input[name=__RequestVerificationToken]').val();
            return data;
        };

       

        </script>
    }


</div>



