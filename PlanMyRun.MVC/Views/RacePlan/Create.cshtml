@model PlanMyRun.Models.RacePlanModels.RacePlanCreate

@{
    ViewBag.Title = "Create New Plan";
}
<div class="container">
    <div class="row justify-content-center">
        <div class="col-auto mb-4">
            <div class="card margin">
                <div>
                    <a href="@Url.Action("Index","RacePlan")" title="Back to List"><img alt="Back to List" src="@Url.Content("~/Content/assets/box-arrow-left.svg")" /></a>
                </div>
                <div class="card-header text-center"><h2> @ViewBag.Title</h2></div>
                <div class="card-body">

                    @using (Html.BeginForm())
                    {
                        @Html.AntiForgeryToken()


                        <div class="form-horizontal">
                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                            <div class="form-group">
                                @Html.LabelFor(model => model.RaceName, htmlAttributes: new { @class = "control-label, col-md-12" })
                                <div class="col-md-12">
                                    @Html.EditorFor(model => model.RaceName, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.RaceName, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.RaceDate, htmlAttributes: new { @class = "control-label, col-md-12" })
                                <div class="col-md-12">
                                    @Html.EditorFor(model => model.RaceDate, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.RaceDate, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.IsPublic, htmlAttributes: new { @class = "control-label, col-md-12" })
                                <div class="col-md-12">
                                    <div class="checkbox">
                                        @Html.EditorFor(model => model.IsPublic)
                                        @Html.ValidationMessageFor(model => model.IsPublic, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.RaceLength, htmlAttributes: new { @class = "control-label, col-md-12" })
                                <div class="col-md-12">
                                    @Html.EditorFor(model => model.RaceLength, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.RaceLength, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.GoalTime, htmlAttributes: new { @class = "control-label, col-md-12" })
                                <div class="col-md-12">
                                    @Html.EditorFor(model => model.GoalTime, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.GoalTime, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label, col-md-12" })
                                <div class="col-md-12">
                                    @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group text-center">
                                <div class="col-md-12">
                                    <input type="submit" value="Create" class="btn" />
                                </div>
                            </div>
                        </div>
                    }


                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script type="text/javascript">
        $(function () {
            $('#datetimepicker3').datetimepicker({
                pickDate: false
            });
        });
    </script>
}
