@model PlanMyRun.Models.RacePlanModels.RacePlanDetail

@{
    ViewBag.Title = "Details";
}
@*<%-- used for ajax in AddAntiForgeryToken() --%>*@
<form id="__AjaxAntiForgeryForm" action="#" method="post">@Html.AntiForgeryToken()</form>

<h2>Details</h2>

<div>
    <h4>RacePlanDetail</h4>
    <hr />
    <dl class="dl-horizontal">
        <dt>
            @Html.DisplayNameFor(model => model.RaceName)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.RaceName)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.RaceDate)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.RaceDate)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.IsPublic)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.IsPublic)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.RaceLength)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.RaceLength)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.GoalTime)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.GoalTime)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Description)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Description)
        </dd>

    </dl>
</div>
<div id="calender"></div>

<div id="myModal" class="modal fade" role="dialog">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title"><span id="eventTitle"></span></h4>
            </div>
            <div class="modal-body">
                <button id="btnDelete" class="btn btn-default btn-sm pull-right">
                    <span class="glyphicon glyphicon-remove"></span> Remove
                </button>
                <button id="btnEdit" class="btn btn-default btn-sm pull-right" style="margin-right:5px;">
                    <span class="glyphicon glyphicon-pencil"></span> Edit
                </button>
                <p id="pDetails"></p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

@*<div id="runCreateModal" class="modal fade" role="dialog">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                    <h4 class="modal-title">Create Run</h4>
                </div>
                <div class="modal-body">
                    @Html.Partial("_RunCreate", new PlanMyRun.Models.RunModels.RunCreate() { RacePlanId = Model.Id, ScheduledDate=DateTime.Now })
                    <form class="form-horizontal">
                            <input type="hidden" id="hdEventID" value="0" />
                            <div class="form-group">
                                <label>Subject</label>
                                <input type="text" id="txtSubject" class="form-control" />
                            </div>
                            <div class="form-group">
                                <label>Start</label>
                                <div class="input-group date" id="dtp1">
                                    <input type="text" id="ScheduleDateTime" class="form-control" />
                                    <span class="input-group-addon">
                                        <span class="glyphicon glyphicon-calendar"></span>
                                    </span>
                                </div>
                            </div>
                            <div class="form-group">
                                <label>Actual Distance</label>
                                <textarea id="ActualDistance" class="form-control"></textarea>
                            </div>
                            <div class="form-group">
                                <label>Planned Distance</label>
                                <textarea id="Distance" class="form-control"></textarea>
                            </div>
                            <div class="form-group">
                                <div class="checkbox">
                                    <label><input type="checkbox" id="chkIsFullDay" checked="checked" />  Is Full Day event</label>
                                </div>
                            </div>
                            <div class="form-group" id="divEndDate" style="display:none">
                                <label>End</label>
                                <div class="input-group date" id="dtp2">
                                    <input type="text" id="txtEnd" class="form-control" />
                                    <span class="input-group-addon">
                                        <span class="glyphicon glyphicon-calendar"></span>
                                    </span>
                                </div>
                            </div>
                            <button type="button" id="runSave" class="btn btn-success">Save</button>
                            <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                        </form>
                </div>
            </div>
        </div>
    </div>*@

<div id="myModalSave" class="modal fade" role="dialog">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title">Save Event</h4>
            </div>
            <div class="modal-body">
                <form class="form-horizontal">
                    <input type="hidden" id="Id" />
                    <div class="form-group">
                        <label>Race Plan Id</label>
                        <input type="text" id="RacePlanId" class="form-control" />
                    </div>
                    <div class="form-group">
                        <label>Description</label>
                        <input type="text" id="Description" class="form-control" />
                    </div>
                    <div class="form-group">
                        <label>Planned Distance</label>
                        <input type="text" id="PlannedDistance" class="form-control" />
                    </div>
                    <div class="form-group">
                        <label>Estimated Time</label>
                        <input type="text" id="EstimatedTime" class="form-control" />
                    </div>
                    <div class="form-group">
                        <label>Start</label>
                        <div class="input-group date" id="dtp1">
                            <input type="text" id="ScheduleDateTime" class="form-control" />
                            <span class="input-group-addon">
                                <span class="glyphicon glyphicon-calendar"></span>
                            </span>
                        </div>
                    </div>
                    <div class="form-group">
                        <label>Location Id</label>
                        <input type="text" id="LocationId" class="form-control" />
                    </div>
                    <div class="form-group">
                        <label>Actual Distance</label>
                        <input type="text" id="ActualDistance" class="form-control" />
                    </div>
                    <div class="form-group">
                        <label>Actual Time</label>
                        <input type="text" id="ActualTime" class="form-control" />
                    </div>
                    <div class="form-group">
                        <label>Subject</label>
                        <input type="text" id="txtSubject" class="form-control" />
                    </div>




                    @*<div class="form-group">
            <div class="checkbox">
                <label><input type="checkbox" id="chkIsFullDay" checked="checked" />  Is Full Day event</label>
            </div>
        </div>*@
                    @*<div class="form-group" id="divEndDate" style="display:none">
            <label>End</label>
            <div class="input-group date" id="dtp2">
                <input type="text" id="txtEnd" class="form-control" />
                <span class="input-group-addon">
                    <span class="glyphicon glyphicon-calendar"></span>
                </span>
            </div>
        </div>*@
                    <button type="button" id="runSave" class="btn btn-success">Save</button>
                    <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                </form>
            </div>
        </div>
    </div>
</div>

<link href="//cdnjs.cloudflare.com/ajax/libs/fullcalendar/3.4.0/fullcalendar.min.css" rel="stylesheet" />
<link href="//cdnjs.cloudflare.com/ajax/libs/fullcalendar/3.4.0/fullcalendar.print.css" rel="stylesheet" media="print" />

@section Scripts{
    <script src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.18.1/moment.min.js"></script>
    <script src="//cdnjs.cloudflare.com/ajax/libs/fullcalendar/3.4.0/fullcalendar.min.js"></script>

    <script>
      

        $(document).ready(function () {
            var events = [];
            var selectedEvent = null;
            FetchEventAndRenderCalendar();
            function FetchEventAndRenderCalendar() {
                $.ajax({
                    type: "GET",
                    url: "/Run/GetRunsInPlan/" +@Model.Id,
                    success: function (data) {
                        $.each(data, function (i, v) {
                            events.push({
                                title: v.PlannedDistance + ' Mile Run',
                                eventId:v.Id,
                                description: v.Description,
                                start: moment(v.ScheduleDateTime),
                                end: v.End != null ? moment(v.End) : null,
                                color: v.ThemeColor,
                                allDay: v.IsFullDay,
                                raceName: v.RacePlanName,
                                plannedDistance: v.PlannedDistance,
                                raceName: v.RacePlanName,
                                actualDistance: v.ActualDistance,
                                actualTime: v.ActualTime,
                                racePlanId: v.RacePlanId,
                                estimatedTime: v.EstimatedTime.TotalHours,
                                locationId: v.LocationId,
                            });
                        })

                        GenerateCalender(events);
                    },
                    error: function (error) {
                        alert('failed');
                    }
                })
            }
            function GenerateCalender(events) {
                $('#calender').fullCalendar('destroy');
                $('#calender').fullCalendar({
                    contentHeight: 400,
                    defaultDate: new Date(),
                    timeFormat: 'h(:mm)a',
                    header: {
                        left: 'prev,next today',
                        center: 'title',
                        right: 'month,basicWeek,basicDay,agenda'
                    },
                    eventLimit: true,
                    eventColor: '#378006',
                    events: events,
                    eventClick: function (calEvent, jsEvent, view) {
                        selectedEvent = calEvent;
                        $('#myModal #eventTitle').text(calEvent.title);
                        var $description = $('<div/>');
                        $description.append($('<p/>').html('<b>Start:</b>' + calEvent.start.format("DD-MMM-YYYY HH:mm a")));
                        if (calEvent.end != null) {
                            $description.append($('<p/>').html('<b>End:</b>' + calEvent.end.format("DD-MMM-YYYY HH:mm a")));
                        }
                        $description.append($('<p/>').html('<b>Description:</b>' + calEvent.description));
                        $description.append($('<p/>').html('<b>Location Id :</b>' + calEvent.locationId));
                        $description.append($('<p/>').html('<b>Actual Distance:</b>' + calEvent.actualDistance));
                        $description.append($('<p/>').html('<b>Actual Time:</b>' + calEvent.actualTime));
                        $description.append($('<p/>').html('<b>Planned Distance:</b>' + calEvent.plannedDistance));
                         $description.append($('<p/>').html('<b>Estimated Time:</b>' + calEvent.estimatedTime));
                        $('#myModal #pDetails').empty().html($description);

                        $('#myModal').modal();
                    },
                     selectable: true,

                    select: function (start, end) {
                        selectedEvent = {
                            eventID: 0,
                            title: '',
                            description: '',
                            start: start.format("yyyy-MM-dd"),
                            end: end,
                            allDay: false,
                            color: ''
                        };
                        openAddEditForm();
                        $('#calendar').fullCalendar('unselect');
                    },
                    editable: true,
                    eventDrop: function (event) {
                        var data = {

                            Id: event.eventId,
                            RacePlanId: event.racePlanId,
                            Description: event.Description,
                            PlannedDistance: event.plannedDistance,
                            EstimatedTime: event.estimatedTime,
                            ScheduleDateTime: event.start.format('MM/DD/YYYY HH:mm'),
                            End: event.end != null ? event.end.format('DD/MM/YYYY HH:mm A') : null,
                            LocationId: event.locationId,
                            ActualDistance: event.actualDistance,
                            ActualTime: event.acutalTime,

                        };
                        SaveEvent(data);
                    }
                })
            }
            $('#btnEdit').click(function () {
                //Open modal dialog for edit event

                openAddEditForm();
            })
            $('#btnDelete').click(function () {
                if (selectedEvent != null && confirm('Are you sure?')) {
                    $.ajax({
                        type: "POST",
                        url: "/Run/Delete/"+ selectedEvent.eventId,
                       data: AddAntiForgeryToken({ id: selectedEvent.eventId }),
                        success: function () {
                                //Refresh the calender
                                FetchEventAndRenderCalendar();
                                $('#myModal').modal('hide');

                        },
                        error: function () {
                            alert('Failed');
                        }
                    })
                }
            })
            //$('#dtp1,#dtp2').datetimepicker({
            //    format: 'DD/MM/YYYY HH:mm A'
            //});
            $('#chkIsFullDay').change(function () {
                if ($(this).is(':checked')) {
                    $('#divEndDate').hide();
                }
                else {
                    $('#divEndDate').show();
                }
            });
            function openAddEditForm() {
                if (selectedEvent != null && selectedEvent.title!='') {
                    $('#Id').val(selectedEvent.eventId);
                    $('#RacePlanId').val(selectedEvent.racePlanId);
                    $('#Description').val(selectedEvent.Description);
                    $('#PlannedDistance').val(selectedEvent.plannedDistance);
                     $('#EstimatedTime').val(selectedEvent.estimatedTime);
                    $('#ScheduleDateTime').val(selectedEvent.start.format('MM/DD/YYYY HH:mm'));
                    $('#LocationId').val(selectedEvent.locationId);
                    $('#ActualDistance').val(selectedEvent.actualDistance);
                    $('#ActualTime').val(selectedEvent.actualTime);
                    $('#txtEnd').val(selectedEvent.end != null ? selectedEvent.end.format('DD/MM/YYYY HH:mm A') : '');

                    //$('#txtSubject').val(selectedEvent.title);
                    //$('#chkIsFullDay').prop("checked", selectedEvent.allDay || false);
                    //$('#chkIsFullDay').change();
                    $('#ddThemeColor').val(selectedEvent.color);

                }
                $('#myModalSave').modal();
                    $('#myModal').modal('hide');
            }
            $('#runSave').click(function () {
                //Validation/
                //if ($('#txtSubject').val().trim() == "") {
                //    alert('Subject required');
                //    return;
                //}
                if ($('#ScheduleDateTime').val().trim() == "") {
                    alert('Start date required');
                    return;
                }

                else {
                    var startDate = moment($('#ScheduleDateTime').val(), "MM/DD/YYYY HH:mm").toDate();
                    var endDate = moment($('#txtEnd').val(), "DD/MM/YYYY HH:mm A").toDate();
                    if (startDate > endDate) {
                        alert('Invalid end date');
                        return;
                    }
                }

                var data = {
                    Id: $('#Id').val(),
                    RacePlanId: $('#RacePlanId').val(),
                    PlannedDistance:$('#PlannedDistance').val(),
                    EstimatedTime:$('#EstimatedTime').val(),
                    LocationId:$('#LocationId').val(),
                    ActualDistance:$('#ActualDistance').val(),
                    ActualTime:$('#ActualTime').val(),
                    ScheduleDateTime:$('#ScheduleDateTime').val(),

                }
                SaveEvent(data);
                // call function for submit data to the server
            })
            function SaveEvent(data) {

                AddAntiForgeryToken(data);

                $.ajax({
                    type: "POST",
                    url: '@Url.Action("Edit", "Run")',
                    data: data,
                    success: function () {
       
                            //Refresh the calender
                            FetchEventAndRenderCalendar();
                            $('#myModalSave').modal('hide');
                        
                    },
                    error: function () {
                        alert('Failed');
                    }
                })
            }

             function AddAntiForgeryToken(data) {
              data.__RequestVerificationToken = $('#__AjaxAntiForgeryForm input[name=__RequestVerificationToken]').val();
            return data;
             };
        })
    </script>
}
<p>
    @Html.ActionLink("Edit", "Edit", new { id = Model.Id }) |
    @Html.ActionLink("Back to List", "Index")
</p>
