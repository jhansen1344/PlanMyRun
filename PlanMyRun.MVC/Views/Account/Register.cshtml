@model PlanMyRun.MVC.Models.RegisterViewModel

@{
    ViewBag.Title = "Register";
}
<div class="container text-center">
    <div class="row justify-content-center">
        <div class="col-auto mb-4">
            <div class="card margin">
                <div class="card-header"><h2>@ViewBag.Title</h2></div>
                <div class="card-body">

                    @using (Html.BeginForm())
                    {
                        @Html.AntiForgeryToken()

                    <div class="form-horizontal">
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        <div class="form-group">

                            @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control", @placeholder = "Email" } })
                            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })

                        </div>

                        <div class="form-group">

                            @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control", @placeholder = "Password" } })
                            @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })

                        </div>

                        <div class="form-group">

                            @Html.EditorFor(model => model.ConfirmPassword, new { htmlAttributes = new { @class = "form-control", @placeholder = "Confirm Password" } })
                            @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })

                        </div>

                        <div class="form-group">

                            @Html.EditorFor(model => model.ZipCode, new { htmlAttributes = new { @class = "form-control", @placeholder = "ZipCode" } })
                            @Html.ValidationMessageFor(model => model.ZipCode, "", new { @class = "text-danger" })

                        </div>

                        <div class="form-group">

                            @Html.EditorFor(model => model.Pace, new { htmlAttributes = new { @class = "form-control", @placeholder = "Pace" } })
                            @Html.ValidationMessageFor(model => model.Pace, "", new { @class = "text-danger" })

                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.LikesDark, htmlAttributes: new { @class = "control-label" })

                            <div class="checkbox">
                                @Html.EditorFor(model => model.LikesDark)
                                @Html.ValidationMessageFor(model => model.LikesDark, "", new { @class = "text-danger" })
                            </div>

                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.LikesHeat, htmlAttributes: new { @class = "control-label" })
                            <div class="checkbox">
                                @Html.EditorFor(model => model.LikesHeat)
                                @Html.ValidationMessageFor(model => model.LikesHeat, "", new { @class = "text-danger" })
                            </div>

                        </div>



                        <div class="form-group">
                            @Html.LabelFor(model => model.LikesMorning, htmlAttributes: new { @class = "control-label" })

                            <div class="checkbox">
                                @Html.EditorFor(model => model.LikesMorning)
                                @Html.ValidationMessageFor(model => model.LikesMorning, "", new { @class = "text-danger" })
                            </div>

                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.LikesRain, htmlAttributes: new { @class = "control-label" })

                            <div class="checkbox">
                                @Html.EditorFor(model => model.LikesRain)
                                @Html.ValidationMessageFor(model => model.LikesRain, "", new { @class = "text-danger" })
                            </div>

                        </div>



                        <div class="form-group">

                            <input type="submit" value="Register" class="btn" />

                        </div>
                    </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
